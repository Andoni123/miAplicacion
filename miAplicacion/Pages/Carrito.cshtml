@page
@model CarritoModel
@{
    ViewData["Title"] = "Carrito de Compras";
}

<div class="container mt-4">
    @if (TempData["MensajeExito"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["MensajeExito"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h3><i class="fas fa-shopping-cart"></i> Mi Carrito</h3>
                </div>
                <div class="card-body">
                    @if (!Model.ItemsCarrito.Any())
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No hay productos en el carrito.
                        </div>
                    }
                    else
                    {
                        foreach (var item in Model.ItemsCarrito)
                        {
                            <div class="cart-item mb-3">
                                <div class="row align-items-center">
                                    <div class="col-md-2">
                                        <img src="@item.ImagenUrl" class="img-fluid rounded" alt="@item.Nombre">
                                    </div>
                                    <div class="col-md-4">
                                        <h5>@item.Nombre</h5>
                                        <p class="text-muted">@item.TipoOferta</p>
                                    </div>
                                    <div class="col-md-2">
                                        <form method="post" asp-page-handler="ActualizarCantidad">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <div class="input-group">
                                                <input type="number" name="cantidad" class="form-control" value="@item.Cantidad" min="1" onchange="this.form.submit()" />
                                            </div>
                                        </form>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="precio">€@((item.Precio * item.Cantidad).ToString("N2"))</span>
                                    </div>
                                    <div class="col-md-2">
                                        <form method="post" asp-page-handler="Eliminar" class="d-inline">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <button type="submit" class="btn btn-danger btn-sm">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h3>Resumen del Pedido</h3>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <span>Subtotal</span>
                        <span>€@Model.Total.ToString("N2")</span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Envío</span>
                        <span>Gratis</span>
                    </div>
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <strong>Total</strong>
                        <strong>€@Model.Total.ToString("N2")</strong>
                    </div>
                    <button class="btn btn-primary w-100" @(Model.ItemsCarrito.Any() ? "" : "disabled")>
                        <i class="fas fa-lock"></i> Proceder al Pago
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cart-item {
        background: rgba(43, 62, 80, 0.95);
        padding: 1rem;
        border-radius: 8px;
        border: 1px solid rgba(75, 163, 252, 0.2);
    }

        .cart-item img {
            max-width: 100px;
            height: auto;
        }

    .product-name {
        color: #4ba3fc;
        margin-bottom: 0.5rem;
    }

    .quantity {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .price {
        color: #4ba3fc;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .btn-outline-primary {
        color: #4ba3fc;
        border-color: #4ba3fc;
    }

        .btn-outline-primary:hover {
            background-color: #4ba3fc;
            color: white;
        }

    .card {
        background: rgba(43, 62, 80, 0.95);
        border: 1px solid rgba(75, 163, 252, 0.2);
    }

    .card-header {
        background: rgba(75, 163, 252, 0.1);
        border-bottom: 1px solid rgba(75, 163, 252, 0.2);
        color: #4ba3fc;
    }

    .btn-primary {
        background: linear-gradient(45deg, #4ba3fc, #3d8fe0);
        border: none;
        padding: 0.75rem;
        font-weight: 600;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(75, 163, 252, 0.3);
        }
</style>

@section Scripts {
    <script>
        function updateQuantity(itemId, change) {
            const quantitySpan = document.querySelector(`[data-item-id="${itemId}"] .quantity span`);
            let newQuantity = parseInt(quantitySpan.textContent) + change;
            
            if (newQuantity >= 0) {
                // Realizar la solicitud POST para actualizar la cantidad
                fetch(`?handler=ActualizarCantidad&id=${itemId}&cantidad=${newQuantity}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                }).then(response => {
                    if (response.ok) {
                        location.reload(); // Recargar para actualizar los totales
                    }
                });
            }
        }

        // Actualizar los precios cuando cambia la cantidad
        function actualizarPrecioTotal() {
            fetch('?handler=ObtenerTotal')
                .then(response => response.json())
                .then(data => {
                    document.querySelector('.total-amount').textContent = `$${data.total}`;
                });
        }
    </script>
}